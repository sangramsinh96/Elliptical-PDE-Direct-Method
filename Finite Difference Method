%
%   2D Laplace Equation FDM Solver for a Rectangular Plate
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
clc
clear
%% Spatial Discretization
l=input('Enter length of the plate: ');
b=input('Enter width of the plate: ');
nx=input('Enter value of nodes in x: ');
ny=input('Enter value of nodes in  y: ');
x = linspace(0,l,nx+2);
y = linspace(0,b,ny+2);
dx = x(2) - x(1);
dy = y(2) - y(1);
%% Boundary Conditions
BC_Top = input('Enter temperature value of top : ');
BC_Bottom = input('Enter temperature value of bottom: ');
BC_Right = input('Enter temperature value of right side: ');
BC_Left = input('Enter temperature value of left side: ');
%% Finite Difference Matrix
FDM = zeros(nx*ny);
for i=1:nx*ny
    for j=1:nx*ny
        FDM(i,i) = -2*(dx^2+dy^2);
    end
end
for i=1:nx*ny-1
    FDM(i,i+1) = dy^2;
    if mod(i,nx) == 0
        FDM(i,i+1) = 0;
    end
end
for i=1:nx*ny-1
    FDM(i+1,i) = dy^2;
    if mod(i,nx) == 0
        FDM(i+1,i) = 0;
    end
end
for i=1:nx*ny-nx
    FDM(i,i+nx) = dx^2;
end
for i=1:nx*ny-nx
    FDM(i+nx,i) = dx^2;
end
%% Right Hand Side Vector
RHS = zeros(nx*ny,1);
for i=1:nx
    RHS(i) = RHS(i) - BC_Top*dx^2;
end
for i=nx*ny-nx+1:nx*ny
    RHS(i) = RHS(i) - BC_Bottom*dx^2;
end
for i=1:nx:nx*ny
    RHS(i) = RHS(i) - BC_Left*dy^2;
end
for i=nx:nx:nx*ny
    RHS(i) = RHS(i) - BC_Right*dy^2;
end
%% Solution
T = FDM\RHS;
T
